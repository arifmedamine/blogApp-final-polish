datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = []
}

generator dbml {
  provider = "prisma-dbml-generator"
  // output     = "../dbml"
  // outputName = "schema.dbml"
  // projectName = "nestjs-prisma-starter"
  // projectDatabaseType = "PostgreSQL"
  // projectNote = "Test project description"
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  firstname String?
  lastname  String?
  posts     Post[]
  role      Role
  archive   Archive?
  aricles   Article[]
  issues    Issue[]
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean
  title     String
  content   String?
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
}

model Article {
  id          String    @id @default(cuid())
  title       String?
  description String?
  published   Boolean?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  authorId    String?
  issueId     String?
  author      User?     @relation(fields: [authorId], references: [id])
  issue       Issue?    @relation(fields: [issueId], references: [id])
  archive     Archive[]
}

model Issue {
  id          String    @id @default(cuid())
  title       String?
  description String?
  published   Boolean
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?
  authorId    String?
  author      User?     @relation(fields: [authorId], references: [id])
  articles    Article[]
  archive     Archive[]
}

model Archive {
  id      String    @id @default(cuid())
  userId  String?   @unique
  user    User?     @relation(fields: [userId], references: [id])
  article Article[]
  issue   Issue[]
}

enum Role {
  ADMIN
  USER
}
